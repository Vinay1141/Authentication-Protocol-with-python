import tkinter as tk
from device import Device
from server import Server


class ProtocolApp:
    def __init__(self):
        self.server = Server()
        self.device = Device()
        self.root = tk.Tk()
        self.root.title("Authentication Protocol - Step-by-Step")
        self.log_text = tk.Text(self.root, height=20, width=80)
        self.log_text.pack()

        self.step_label = tk.Label(self.root, text="Step: Initialize", font=("Arial", 14))
        self.step_label.pack()

        self.register_button = tk.Button(
            self.root, text="Register Device", command=self.register_device, state=tk.NORMAL
        )
        self.register_button.pack(pady=10)

        self.authenticate_button = tk.Button(
            self.root, text="Authenticate Device", command=self.authenticate_device, state=tk.DISABLED
        )
        self.authenticate_button.pack(pady=10)

    def log(self, message):
        self.log_text.insert(tk.END, f"{message}\n")
        self.log_text.see(tk.END)

    def register_device(self):
        self.step_label.config(text="Step: Device Registration")
        self.log("Step 1: Generating identifier Ii for registration.")
        identifier = self.device.generate_identifier()
        self.log(f"Generated Identifier: Ii = {identifier}")

        self.log("Step 2: Sending registration request to the server.")
        session_key = self.server.register_device(self.device.device_id, self.device.public_key)
        self.log(f"Session key generated by server: {session_key}")

        self.device.set_session_key(session_key)
        self.log("Step 3: Shared session key calculated using ECC key exchange.")
        self.log("Device registration completed successfully.")
        self.authenticate_button.config(state=tk.NORMAL)

    def authenticate_device(self):
        self.step_label.config(text="Step: Device Authentication")
        self.log("Step 1: Generating timestamp T1 and encrypting it.")
        timestamp, iv, encrypted_message, tag = self.device.generate_auth_request()
        self.log(f"Generated Timestamp T1: {timestamp}")
        self.log(f"Encrypted Timestamp: IV={iv}, Tag={tag}, Message={encrypted_message}")

        self.log("Step 2: Sending authentication request to the server.")
        auth_status = self.server.authenticate_device(
            self.device.device_id, iv, encrypted_message, tag
        )

        if auth_status:
            self.log("Authentication Successful!")
        else:
            self.log("Authentication Failed.")

    def run(self):
        self.root.mainloop()


if __name__ == "__main__":
    app = ProtocolApp()
    app.run()
